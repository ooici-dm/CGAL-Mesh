demo/Nef_3/README
=================

The visualization of these demo programs only work with QT and OpenGL. 
If you have Qt and OpenGL install, but GL.h and GLU.h are not found,
see http://doc.trolltech.com/3.3/opengl.html.

nef_3:  This program maintains a stack of Nef_3 polyhedra and accepts
------  a little language to manipulate this stack, load files, apply
        boolean operations, save files, etc.

visualization_SM: This program shows how to display the sphere map of 
----------------  a vertex in an Nef_polyhedron_3. The program expects
                  a 3D Nef polyherdon from standard in. For example
		  call ./visualization_SM < visualization_SM.cin


visualization_SNC: This program shows how to display Nef_polyhedron_3. 
-----------------  The program expects a 3D Nef polyhedron from
		   standard in. For example call
		   ./visualization_SNC < visualization_SNC.cin

visual_hull: This program computes the visual hull of a 3D Object
-----------  photographed by several cameras. Each camera returns
             one polygon that resembles the shape of the 3D Object
             from the camperas point of view. The visual hull is
             an approximation of the original 3D Object. From a
             camara photos, we compute a cone that tightly covers
             all 3D Objects that could have caused the photographed
             shape. The intersection of all cones is the visual hull.

             File format .vsh (no comments allowed):
             ---------------------------------------
	     <point>         \\ minimum and maximum coordinates of 
             <point>         \\ some box enclosing the 3D object.
             int             \\ number of cameras.
	     <camera>*       \\ position and photo of cameras

	     camera
             ------
             <point>         \\ position of camera.
	     int             \\ number of facet cycles of photo shape
	     <facet cycle>*  \\ cycle data of facet cycles

             facet cycle (first one is outer cycle, others bound holes)
             -----------
             int             \\ number of points in the cycle.
             <point>         \\ points of facet cycle 
                             \\ (must lie in common plane)

             point
             -----
             double double double  \\ coordinates of point


cube.off, 
visualization_SNC.cin,
visualization_SM.cin:   example input file
--------

mpi.vsh: example input file for visual_hull. 
------   Call:  visual_hull mpi.vsh
